# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aioxNcbVFd6AO0uIKgtHLCzD2JNd_iwl
"""

from flask import Flask, request, jsonify
from flask_cors import CORS
import joblib
import pandas as pd

# Initialize Flask app
app = Flask(__name__)
# Enable Cross-Origin Resource Sharing (CORS)
CORS(app)

# --- Load Model and Preprocessor ---
try:
    model = joblib.load('model.joblib')
    preprocessor = joblib.load('preprocessor.joblib')
except FileNotFoundError:
    # This is a fallback for deployment environments where the CWD might differ
    try:
        model = joblib.load('/app/model.joblib')
        preprocessor = joblib.load('/app/preprocessor.joblib')
    except FileNotFoundError:
        model = None
        preprocessor = None
        print("Error: Model or preprocessor files not found!")

# --- API Endpoint for Prediction ---
@app.route('/predict', methods=['POST'])
def predict():
    if model is None or preprocessor is None:
        return jsonify({'error': 'Model not loaded'}), 500

    # Get JSON data from the request
    data = request.get_json()
    if not data or 'answers' not in data:
        return jsonify({'error': 'Invalid input'}), 400

    answers = data['answers']

    # Create a DataFrame from the user's answers
    input_df = pd.DataFrame([answers], columns=[f'q{i+1}' for i in range(12)])

    # Preprocess the input data
    input_processed = preprocessor.transform(input_df)

    # Make a prediction
    prediction = model.predict(input_processed)

    # Return the prediction as JSON
    return jsonify({'predicted_age': int(round(prediction[0]))})

# Health check endpoint
@app.route('/')
def index():
    return "Age Predictor API is running!"

if __name__ == '__main__':
    # Run the app on port 5000
    app.run(host='0.0.0.0', port=5000)